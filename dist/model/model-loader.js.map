{"version":3,"sources":["../../src/model/model-loader.js"],"names":["configPath","reduce","previousObj","path","model","require","default","name","console","log","modelLoaderAsync"],"mappings":";AAAA;;;;AAIA;;;;;;;;AAEA;;AACA;;;;;;;;;;;uDAEe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEc,iCAAqB,OAArB,CAFd;;AAAA;AAELA,sBAFK;AAAA,6CAIJA,WAAWC,MAAX,CAAkB,UAACC,WAAD,EAAcC,IAAd,EAAuB;AAC9C,kBAAMC,QAAQC,QAAQF,IAAR,EAAcG,OAA5B;AACA,kCACKJ,WADL,sBAEG,2BAAME,MAAMG,IAAZ,CAFH,EAEuBH,KAFvB;AAID,aANM,EAMJ,EANI,CAJI;;AAAA;AAAA;AAAA;;AAYXI,oBAAQC,GAAR;;AAZW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;WAAeC,gB;;;;SAAAA,gB","file":"model-loader.js","sourcesContent":["/*\n* Database loader\n*/\n\n'use-strict';\n\nimport { globModulePathsAsync } from '../utils';\nimport camel from 'to-camel-case';\n\nexport default async function modelLoaderAsync () {\n  try {\n    const configPath = await globModulePathsAsync('model');\n\n    return configPath.reduce((previousObj, path) => {\n      const model = require(path).default;\n      return {\n        ...previousObj,\n        [camel(model.name)]: model\n      };\n    }, {});\n  } catch (error) {\n    console.log(error);\n  }\n}\n"]}