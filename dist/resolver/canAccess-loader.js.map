{"version":3,"sources":["../../src/resolver/canAccess-loader.js"],"names":["type","locals","Error","args","context","fn","accessPath","access","require","allowed","console","log","validateAccess","canAccessAsync"],"mappings":"AAAA;;;;AAIA;;;;;;AAEA;;;;AAEA;;;uDAEe;AAAA,QAAiCA,IAAjC,SAAiCA,IAAjC;AAAA,QAAuCC,MAAvC,SAAuCA,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,kBAEPD,QAAQ,IAFD;AAAA;AAAA;AAAA;;AAAA,kBAGH,IAAIE,KAAJ,CAAU,oDAAV,CAHG;;AAAA;AAAA;AAAA,oEAMJ;AAAA,oBAAiCC,IAAjC,SAAiCA,IAAjC;AAAA,oBAAuCC,OAAvC,SAAuCA,OAAvC;AAAA,oBAAgDC,EAAhD,SAAgDA,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACoB,iCAAqB,QAArB,CADpB;;AAAA;AACCC,kCADD;AAAA;AAIGC,8BAJH,GAIYC,QAAQF,WAAW,CAAX,CAAR,CAJZ;AAAA;AAAA,+BAKmBC,OAAO,EAAEP,UAAF,EAAQC,cAAR,EAAP,CALnB;;AAAA;AAKGQ,+BALH;;AAAA,4BAOEA,OAPF;AAAA;AAAA;AAAA;;AAAA,yDASM,KATN;;AAAA;AAAA,yDAWMJ,GAAG,EAAEF,UAAF,EAAQC,gBAAR,EAAH,CAXN;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAcHM,gCAAQC,GAAR;;AAdG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANI;;AAAA,uBAMWC,cANX;AAAA;AAAA;;AAAA,qBAMWA,cANX;AAAA;;AAAA;AAAA;AAAA;;AAwBXF,oBAAQC,GAAR;;AAxBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;WAAeE,c;;;;SAAAA,c","file":"canAccess-loader.js","sourcesContent":["/*\n* Can access loader\n*/\n\n'use strict';\n\nimport { globModulePathsAsync } from '../utils';\n\n// const error = await globPathsAsync(error/error');\n\nexport default async function canAccessAsync ({ type, locals }) {\n  try {\n    if (type == null) {\n      throw new Error('canAccess: Action type cannot be null or undefined');\n    }\n\n    return async function validateAccess ({ args, context, fn }) {\n      const accessPath = await globModulePathsAsync('access');\n\n      try {\n        const access = require(accessPath[0]);\n        const allowed = await access({ type, locals });\n\n        if (!allowed) {\n          // console.error(`${error.ERROR.ACCESS_DENIED.message.error} for action ${type}`);\n          return false;\n        } else {\n          return fn({ args, context });\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  } catch (error) {\n    console.log(error);\n  }\n}\n"]}