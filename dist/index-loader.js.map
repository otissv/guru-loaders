{"version":3,"sources":["../src/index-loader.js"],"names":["schema","model","resolver","databaseLoader","configLoader","middlewareLoader","modelLoader","resolverLoader","routeLoader","schemaLoader","console","log","loaders"],"mappings":"AAAA;;;;AAIA;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;uDAEe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEU,6BAFV;;AAAA;AAELA,kBAFK;AAAA;AAAA,mBAGS,2BAAiBA,MAAjB,CAHT;;AAAA;AAGLC,iBAHK;AAAA;AAAA,mBAIY,+BAAoB,EAAED,cAAF,EAAUC,YAAV,EAApB,CAJZ;;AAAA;AAILC,oBAJK;;;AAMX,iCAAM,EAAEF,cAAF,EAAUE,kBAAV,EAAN;;AANW;AAAA,mBASa,gCATb;;AAAA;AAAA;AAAA;AAAA,mBAUW,kCAVX;;AAAA;AAAA;AAAA;AAAA,mBAWe,iCAXf;;AAAA;AAAA;AAAA,0BAYID,KAZJ;AAAA,0BAaOC,QAbP;AAAA;AAAA,mBAcU,6BAdV;;AAAA;AAAA;AAAA,0BAeKF,MAfL;AAAA;AASTG,4BATS;AAUTC,0BAVS;AAWTC,8BAXS;AAYTC,yBAZS;AAaTC,4BAbS;AAcTC,yBAdS;AAeTC,0BAfS;AAAA;;AAAA;AAAA;AAAA;;AAkBXC,oBAAQC,GAAR;;AAlBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;WAAeC,O;;;;SAAAA,O","file":"index-loader.js","sourcesContent":["/*\n* Index loader\n*/\n\n'use strict';\nimport databasesLoaderAsync from './databases/databases-loader';\nimport environmentLoaderAsync from './environment/environment-loader';\nimport middlewareLoaderAsync from './middleware/middleware-loader';\nimport modelLoaderAsync from './model/model-loader';\nimport resolverLoaderAsync from './resolver/resolvers-loader';\nimport routesLoaderAsync from './routes/routes-loader';\nimport schemaLoaderAsync from './schema/schema-loader';\nimport tests from './tests';\n\nexport default async function loaders () {\n  try {\n    const schema = await schemaLoaderAsync();\n    const model = await modelLoaderAsync(schema);\n    const resolver = await resolverLoaderAsync({ schema, model });\n\n    tests({ schema, resolver });\n\n    return {\n      databaseLoader: await databasesLoaderAsync(),\n      configLoader: await environmentLoaderAsync(),\n      middlewareLoader: await middlewareLoaderAsync(),\n      modelLoader: model,\n      resolverLoader: resolver,\n      routeLoader: await routesLoaderAsync(),\n      schemaLoader: schema\n    };\n  } catch (error) {\n    console.log(error);\n  }\n}\n"]}